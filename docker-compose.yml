services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backnet

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-api
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - API_KEY=${API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ISSUER=${ISSUER}
      - API_URL=${API_URL}
    ports:
      - "8080:8080"
    networks:
      - backnet
    depends_on:
      - mysql

  adminer:
    image: adminer
    container_name: adminer-db
    environment:
      ADMINER_DEFAULT_SERVER: mysql-db
    ports:
      - "8081:8080"
    depends_on:
      - mysql
    networks:
      - backnet

  frontend:
    build:
      context: frontend
      target: frontend
    container_name: frontend
    working_dir: /code/next
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_DEVELOPMENT=true
    volumes:
      - ./frontend:/code
      - /code/node_modules
    ports:
      - "3000:3000"
    networks:
      - backnet
    command: "npm run dev"

volumes:
  mysql-data:

networks:
  backnet:
    driver: bridge
